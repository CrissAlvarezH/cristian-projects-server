version: "3.9"

services:

  reverse-proxy:
    image: traefik:v2.7
    ports:
      - 80:80
      - 443:443
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ./traefik.yaml:/traefik.yaml
      - ./traefik.log:/traefik.log
      - ./acme.json:/acme.json

  database:
    image: postgres:14-alpine
    labels:
      - traefik.enable=false
    ports:
      - 5432:5432
    env_file:
      - .env-services/.database.env
    volumes:
      - ./init-db:/docker-entrypoint-initdb.d:ro
      - db_data:/var/lib/postgresql/data

  backups:
    image: crissalvarezh/automate-backups-to-s3:latest
    labels:
      - traefik.enable=false
    volumes:
      - ubicor-building-images:/backups/static-files/ubicor-building-images
    env_file:
      - .env-services/.backups.env

  portfolio:
    image: crissalvarezh/portfolio:latest
    labels:
      - traefik.http.routers.portfolio.rule=Host(`alvarezcristian.com`)
      - traefik.http.routers.portfolio.tls.certresolver=myresolver
    ports:
      - 3001:3000

  ubicor-api:
    image: crissalvarezh/ubicor-api:latest
    labels:
      - traefik.http.routers.ubicor-api.rule=Host(`api.ubicor.alvarezcristian.com`)
      - traefik.http.routers.ubicor-api.tls.certresolver=myresolver
    ports:
      - 8000:80
    depends_on:
      - reverse-proxy
      - database
    volumes:
      - ubicor-building-images:/code/app/static/images/buildings
    env_file:
      - .env-services/.ubicor-api.env

  ubicor-frontend:
    image: crissalvarezh/ubicor-frontend:latest
    labels:
      - traefik.http.routers.ubicor-frontend.rule=Host(`ubicor.alvarezcristian.com`)
      - traefik.http.routers.ubicor-frontend.tls.certresolver=myresolver
    depends_on:
      - ubicor-api
    ports:
      - 3000:3000
    env_file:
      - .env-services/.ubicor-frontend.env

volumes:
  db_data:
  ubicor-building-images:
